{"ast":null,"code":"var _jsxFileName = \"/home/gisele/Documentos/curso/frontend/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport logo from './assets/logo.png';\nimport Routes from './routes';\n\nfunction App() {\n  return React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: logo,\n    alt: \"AirCnc\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(Routes, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  })));\n}\n\nexport default App; //useState recebe um valor inicial, mas qual a informação que queremos armazenar? neste exemplo é o email e qual é\n//o valor que inicia no input? é vazio por isso userState recebe valor vazio\n//Porque usamos o []? porque o userState retorna um vetor com duas posições, por isso utilizamos o [] para aplicar a \n//desestruturação ou seja eu quero pegar os dois valores que esta função me retorna, quais são esses valores?\n//ele vai me retornar o email,e uma função chamada setEmail.\n//O email nada mais é do que esse texto em branco, mas ele vai me retornar o valor desse estado de e-mail em tempo real \n//toda vez que esse valor sofrer alteração essa variavel email ela vai estar atualizada sempre que eu buscar o valor\n//dela vai estar com o ultimo valor possivel.\n//A função setEmail serve para atualizar o valor desse estado\n//Coloco o tipo da rota o verbo HTTP, não preciso colocar o caminho inteiro da rota localhost pois esse caminho\n//foi configurado em api.js\n//Passo a informação solicitada na rota no segundo parametro, como a chave é o mesmo nome da info da rota, spo coloco o nome\n//Quando chegar nessa linha da constante, ele vai aguardar a finalização de chamada na api e vai armazenar em response\n\n/* \n  Usando o aero function dentro do HTML:\n  onChange = toda vez que houver alteração nesse campo ele recebe um evento e dai o valor desse input\n  esta dentro de event.target.value aqui dentro dessa variavel esta o valor que ele preencheu dentro\n  do input, então eu chamo a função setEmail que é a função para alterar o valor de e-mail \n  e coloco dentro dela o novo valor\n   Para ter esse campo sempre atualizado passamos um value email\n          \n*/","map":{"version":3,"sources":["/home/gisele/Documentos/curso/frontend/src/App.js"],"names":["React","logo","Routes","App"],"mappings":";AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AAEA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AAGA,SAASC,GAAT,GAAe;AAEb,SACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE;AAAK,IAAA,GAAG,EAAEF,IAAV;AAAgB,IAAA,GAAG,EAAC,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAKE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CALF,CADF;AAYD;;AAED,eAAeE,GAAf,C,CAIE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;;AAGA","sourcesContent":["\nimport React from 'react';\nimport './App.css';\n\nimport logo from './assets/logo.png'\nimport Routes from './routes';\n\n\nfunction App() {\n\n  return (\n    <div className=\"container\">\n\n      <img src={logo} alt=\"AirCnc\"/>\n\n      {/* CONTEÚDO */}\n      <div className=\"content\">\n        <Routes />        \n      </div>\n\n    </div> \n  );\n}\n\nexport default App;\n\n\n\n  //useState recebe um valor inicial, mas qual a informação que queremos armazenar? neste exemplo é o email e qual é\n  //o valor que inicia no input? é vazio por isso userState recebe valor vazio\n  //Porque usamos o []? porque o userState retorna um vetor com duas posições, por isso utilizamos o [] para aplicar a \n  //desestruturação ou seja eu quero pegar os dois valores que esta função me retorna, quais são esses valores?\n  //ele vai me retornar o email,e uma função chamada setEmail.\n  //O email nada mais é do que esse texto em branco, mas ele vai me retornar o valor desse estado de e-mail em tempo real \n  //toda vez que esse valor sofrer alteração essa variavel email ela vai estar atualizada sempre que eu buscar o valor\n  //dela vai estar com o ultimo valor possivel.\n  //A função setEmail serve para atualizar o valor desse estado\n\n\n  \n  //Coloco o tipo da rota o verbo HTTP, não preciso colocar o caminho inteiro da rota localhost pois esse caminho\n  //foi configurado em api.js\n  //Passo a informação solicitada na rota no segundo parametro, como a chave é o mesmo nome da info da rota, spo coloco o nome\n  //Quando chegar nessa linha da constante, ele vai aguardar a finalização de chamada na api e vai armazenar em response\n\n  \n  /* \n    Usando o aero function dentro do HTML:\n    onChange = toda vez que houver alteração nesse campo ele recebe um evento e dai o valor desse input\n    esta dentro de event.target.value aqui dentro dessa variavel esta o valor que ele preencheu dentro\n    do input, então eu chamo a função setEmail que é a função para alterar o valor de e-mail \n    e coloco dentro dela o novo valor\n\n    Para ter esse campo sempre atualizado passamos um value email\n            \n  */"]},"metadata":{},"sourceType":"module"}